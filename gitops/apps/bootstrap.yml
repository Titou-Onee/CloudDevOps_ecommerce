apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: all-applications
  namespace: argocd
spec:
  generators:
    - list:
        elements:
          - name: security-psa
            namespace: kube-system
            wave: "0"
            type: directory
            gitPath: gitops/apps/psa

          - name: ecommerce-app
            namespace: ecommerce
            wave: "4"
            type: directory
            gitPath: gitops/apps/ecommerce

          - name: security-falco
            namespace: falco
            wave: "1"
            type: helm
            gitPath: ""
            helmRepo: https://falcosecurity.github.io/charts
            helmChart: falco
            helmVersion: "6.0.0"
            valuesFile: gitops/apps/falco/values.yml

          - name: monitoring-prometheus
            namespace: monitoring
            wave: "2"
            type: helm
            gitPath: ""
            helmChart: kube-prometheus-stack
            helmRepo: https://prometheus-community.github.io/helm-charts
            helmVersion: "55.5.0"
            valuesFile: gitops/apps/prometheus/values.yml
          
          - name: monitoring-grafana
            namespace: monitoring
            wave: "3"
            type: helm
            gitPath: ""
            helmChart: grafana
            helmRepo: https://grafana.github.io/helm-charts
            helmVersion: "7.3.0"
            valuesFile: gitops/apps/grafana/values.yml
  

  template:
    metadata:
      name: '{{name}}'
      namespace: argocd
      annotations:
        argocd.argoproj.io/sync-wave: '{{wave}}'

    spec:
      project: default

      destination:
        server: https://kubernetes.default.svc
        namespace: '{{namespace}}'

      sources:
        - repoURL: https://github.com/Titou-Onee/CloudDevOps_ecommerce.git
          targetRevision: HEAD
          ref: values

        - repoURL: https://github.com/Titou-Onee/CloudDevOps_ecommerce.git
          targetRevision: HEAD
          path: '{{gitPath}}'

        - repoURL: '{{helmRepo}}'
          chart: '{{helmChart}}'
          targetRevision: '{{helmVersion}}'
          helm:
            releaseName: '{{name}}'
            valueFiles:
              - $values/{{valuesFile}}

      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
          - ServerSideApply=true
