apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: helm-applications
  namespace: argocd
spec:
  generators:
    - list:
        elements:
          - name: security-gatekeeper
            namespace: gatekeeper-system
            wave: "1"
            helmRepo: https://open-policy-agent.github.io/gatekeeper/charts
            chart: gatekeeper
            chartVersion: "3.15.1"
            valuesFile: gitops/apps/opa-gatekeeper/values.yml
            additionalPath: ""
          
          - name: security-falco
            namespace: falco
            wave: "1"
            helmRepo: https://falcosecurity.github.io/charts
            chart: falco
            chartVersion: "3.9.1"
            valuesFile: gitops/apps/falco/values.yml
            additionalPath: ""
          
          - name: monitoring-prometheus
            namespace: monitoring
            wave: "2"
            helmRepo: https://prometheus-community.github.io/helm-charts
            chart: kube-prometheus-stack
            chartVersion: "55.5.0"
            valuesFile: gitops/apps/prometheus/values.yml
            additionalPath: ""
          
          - name: monitoring-grafana
            namespace: monitoring
            wave: "3"
            helmRepo: https://grafana.github.io/helm-charts
            chart: grafana
            chartVersion: "7.3.0"
            valuesFile: gitops/apps/grafana/values.yml
            additionalPath: ""
  
  template:
    metadata:
      name: '{{name}}'
      namespace: argocd
      annotations:
        argocd.argoproj.io/sync-wave: '{{wave}}'
      labels:
        app-type: helm
        app-wave: '{{wave}}'
    
    spec:
      project: default
      
      sources:
        # Source 1: Helm chart
        - repoURL: '{{helmRepo}}'
          chart: '{{chart}}'
          targetRevision: '{{chartVersion}}'
          helm:
            releaseName: '{{name}}'
            valueFiles:
              - $values/{{valuesFile}}
        
        # Source 2: Values depuis Git
        - repoURL: https://github.com/Titou-Onee/CloudDevOps_ecommerce.git
          targetRevision: HEAD
          ref: values
      
      destination:
        server: https://kubernetes.default.svc
        namespace: '{{namespace}}'
      
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
          - ServerSideApply=true
        retry:
          limit: 5
          backoff:
            duration: 5s
            maxDuration: 3m

---
# ApplicationSet pour les applications Directory
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: directory-applications
  namespace: argocd
spec:
  generators:
    - list:
        elements:
          - name: security-psa
            namespace: kube-system
            wave: "0"
            path: gitops/apps/psa
            prune: false
          
          - name: ecommerce-app
            namespace: ecommerce
            wave: "4"
            path: gitops/apps/ecommerce
            prune: true
  
  template:
    metadata:
      name: '{{name}}'
      namespace: argocd
      annotations:
        argocd.argoproj.io/sync-wave: '{{wave}}'
      labels:
        app-type: directory
        app-wave: '{{wave}}'
    
    spec:
      project: default
      
      source:
        repoURL: https://github.com/Titou-Onee/CloudDevOps_ecommerce.git
        targetRevision: HEAD
        path: '{{path}}'
        directory:
          recurse: false
      
      destination:
        server: https://kubernetes.default.svc
        namespace: '{{namespace}}'
      
      syncPolicy:
        automated:
          prune: '{{prune}}'
          selfHeal: true
        syncOptions:
          - CreateNamespace=true
        retry:
          limit: 5
          backoff:
            duration: 5s
            maxDuration: 3m