name: Image scan and push

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

permissions:
  contents: read

env:
  DOCKER_IMAGE: docker.io/titou-onee/clouddevops_ecommerce

jobs:
  build:
    permissions:
      contents: read 
      security-events: write 
      actions: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          docker build -t ${{ env.DOCKER_IMAGE }}:test ./Docker


      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@7b7aa264d83dc58691451798b4d117d53d21edfe
        with:
          image-ref: '${{ env.DOCKER_IMAGE }}:test'
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-image-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-image-results.sarif'
            

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        
      - name: Tag and push to DockerHub
        run: |
          docker tag ${{ env.DOCKER_IMAGE }}:test ${{ env.DOCKER_IMAGE }}:latest
          docker tag ${{ env.DOCKER_IMAGE }}:test ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
        
          docker push ${{ env.DOCKER_IMAGE }}:latest
          docker push ${{ env.DOCKER_IMAGE }}:${{ github.sha }}

      - name: Cleanup local images
        if: always()
        run: |
          docker rmi ${{ env.DOCKER_IMAGE }}:test || true
          docker system prune -f || true

      - name: Upload security reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-reports
          path: |
            trivy-fs-results.sarif
            trivy-image-results.sarif
          retention-days: 30