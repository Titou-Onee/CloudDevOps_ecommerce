apiVersion: templates.gatekeeper.sh/v1
kind: ConstraintTemplate
metadata:
  name: k8saccesspolicy
spec:
  crd:
    spec:
      names:
        kind: K8sAccessPolicy
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package k8saccesspolicy

        violation[{"msg": msg}] {
          input.review.kind.kind == "Pod"
          input.review.object.spec.serviceAccountName == "default"
          msg := sprintf("The container %q uses the default serviceAccount", [input.review.object.metadata.name])
        }

        violation[{"msg": msg}] {
          input.review.kind.kind == "Role"
          some i
          rule := input.review.object.rules[i]
          rule.resources[_] == "*"
          msg := sprintf("the role %q uses global permissions (*)", [input.review.object.metadata.name])
        }

        violation[{"msg": msg}] {
          input.review.kind.kind == "Deployment"
          not input.review.object.metadata.annotations["pdb/enabled"]
          msg := sprintf("The deploymnet %q must be associated to a PodDisruptionBudget", [input.review.object.metadata.name])
        }
---
apiVersion: constraints.gatekeeper.sh/v1beta1
kind: K8sAccessPolicy
metadata:
  name: access-policy
spec:
  enforcementAction : dryrun
  match:
    kinds:
      - apiGroups: [""]
        kinds: ["Pod"]
      - apiGroups: ["rbac.authorization.k8s.io"]
        kinds: ["Role"]
      - apiGroups: ["apps"]
        kinds: ["Deployment"]
    excludedNamespaces:
      - kube-system
   #   - security
