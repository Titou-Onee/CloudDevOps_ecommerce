- name: Add ArgoCD Helm Repository
  kubernetes.core.helm_repository:
    name: argocd
    repo_url: https://argoproj.github.io/argo-helm
    state: present

- name: Create ArgoCD namespace
  kubernetes.core.k8s:
    name: "{{ argocd.namespace }}"
    api_version: v1
    kind: namespace
    state: present
    kubeconfig: "{{ kubeconfig_path }}"

- name: Create monitoring namespace
  kubernetes.core.k8s:
    name: "{{ prometheus.namespace }}"
    api_version: v1
    kind: namespace
    state: present
    kubeconfig: "{{ kubeconfig_path }}"

- name: Créer le secret Redis si nécessaire
  kubernetes.core.k8s:
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: argocd-redis
        namespace: "{{ argocd.namespace }}"
      type: Opaque
      stringData:
          auth: "unsecure_admin_password"
    kubeconfig: "{{ kubeconfig_path }}"
    state: present
    
- name: Install ArgoCD with Helm
  kubernetes.core.helm:
    name: argocd
    chart_ref: argocd/argo-cd
    release_namespace: "{{ argocd.namespace }}"
    create_namespace: true
    kubeconfig: "{{ kubeconfig_path }}"
    wait: true
    wait_timeout: 200s
    values:
      global:
        image:
          tag: "{{ argocd.version }}"
      config:
        secret:
          argocd_serv_admin_pass: "{{ argocd.admin_password | password_hash('bcrypt') }}"
        repositories: "{{ argocd.repositories }}"

      controller:
        metrics:
          enabled: true
          serviceMonitor:
            enabled: true
            namespace: "{{ prometheus.namespace }}"
      serv:
        metrics:
          enabled: true
          serviceMonitor:
            enabled: true
            namespace: "{{ prometheus.namespace }}"
                       
      repoServer:
        metrics:
          enabled: true
          serviceMonitor:
            enabled: true
            namespace: "{{ prometheus.namespace }}"

      cm:
        application.instanceLabelKey: argocd.argoproj.io/instance 
        exec.enabled: "true"

- name: Creation of repositories secrets
  kubernetes.core.k8s:
    definition:
      api_version: v1
      kind: Secret
      metadata:
        name: "{{ item.name }}-repo"
        namespace: "{{ argocd.namespace }}"
        labels:
          argocd.argoproj.io/secret-type: repository
      stringData:
        type: git
        url: "{{ item.url }}"
        name: "{{ item.name }}"
    kubeconfig: "{{ kubeconfig_path }}"
    state: present
  loop: "{{ argocd.repositories }}"
  when: argocd.repositories is defined

- name: Wait for ArgoCD Serv
  kubernetes.core.k8s_info:
    api_version: apps/v1
    kind: Deployment
    name: argocd-server
    namespace: "{{ argocd.namespace }}"
    kubeconfig: "{{ kubeconfig_path }}"
    wait: true
    wait_condition:
      type: Available
      status: true
    wait_timeout: 600

- name: Creation of argocd app
  kubernetes.core.k8s:
    definition: "{{ lookup('template', 'application.yml.j2') }}"
    kubeconfig: "{{ kubeconfig_path }}"
    state: present
  loop: "{{ argocd.applications }}"
  loop_control:
    loop_var: app
  when: argocd.applications is defined
